set define off;

DECLARE
V_ABC1 VARCHAR2(1000);
V_ABC2 VARCHAR2(1000);
V_ABC3 VARCHAR2(1000);

V_SQL1 VARCHAR2(1000);

-- CURSOR
CURSOR CUR1 IS SELECT 'XXX' AS ABC FROM DUAL;

-- CUROSR TYPE
TYPE CURTYPE IS REF CURSOR;
CUR2 CURTYPE;

-- RECORD TYPE
TYPE TEST_REC IS RECORD
(
AA VARCHAR2(100),
BB VARCHAR2(100),
CC VARCHAR2(100)
);

TYPE TEST_REC_TAB IS TABLE OF TEST_REC ;
V_TEST_REC_TAB TEST_REC_TAB;

ERR_RAISE_MSG EXCEPTION ;
PRAGMA EXCEPTION_INIT(ERR_RAISE_MSG, -2004);

BEGIN

  -- EXCEPTION
  DECLARE      
  BEGIN   
      SELECT 'TEXT' AS T INTO V_ABC3 FROM DUAL;
          --RAISE_APPLICATION_ERROR(-20000, '테스트');
          RAISE ERR_RAISE_MSG;
  EXCEPTION            
     WHEN NO_DATA_FOUND THEN    
        DBMS_OUTPUT.PUT_LINE('NO_DATA_FOUND = ' || V_ABC3);
     WHEN ERR_RAISE_MSG THEN  
        --RAISE_APPLICATION_ERROR(-20000, '테스트2');
        DBMS_OUTPUT.PUT_LINE('ERR_RAISE_MSG = ' || SQLCODE || ' > ' || SQLERRM);           
     WHEN OTHERS THEN    
        DBMS_OUTPUT.PUT_LINE('OTHERS = ' || SQLCODE || ' > ' || SQLERRM);
  END;


 -- RECORD TEST
 SELECT AA, BB, CC BULK COLLECT INTO V_TEST_REC_TAB FROM (SELECT 'A' AS AA, 'B' AS BB, 'C' AS CC  FROM DUAL);     
 DBMS_OUTPUT.PUT_LINE('V_TEST_REC_TAB COUNT = ' || V_TEST_REC_TAB.COUNT);
 DBMS_OUTPUT.PUT_LINE('V_TEST_REC_TAB COL1 = ' || V_TEST_REC_TAB(1).AA);
 DBMS_OUTPUT.PUT_LINE('V_TEST_REC_TAB COL2 = ' || V_TEST_REC_TAB(1).BB);
 
 FOR I IN 1.. V_TEST_REC_TAB.COUNT
 LOOP
  DBMS_OUTPUT.PUT_LINE('V_TEST_REC_TAB FOR COL1 = ' || V_TEST_REC_TAB(I).AA);
 END LOOP;  
 
-- FOR문 TYPE1
FOR F IN CUR1 LOOP
  DBMS_OUTPUT.PUT_LINE('CUR1 = ' || F.ABC);
END LOOP;

-- FOR문 TYPE2
FOR F IN (SELECT '81' AS ABC FROM DUAL UNION ALL SELECT '82' AS ABC FROM DUAL UNION ALL SELECT '83' AS ABC FROM DUAL) LOOP
  --DBMS_OUTPUT.PUT_LINE('FOR = ' || F.ABC);      
  IF F.ABC = '81' THEN
    DBMS_OUTPUT.PUT_LINE('FOR IF = ' || F.ABC);
  ELSIF F.ABC = '82' THEN
    DBMS_OUTPUT.PUT_LINE('FOR ELSIF = ' || F.ABC);
  ELSE
    DBMS_OUTPUT.PUT_LINE('FOR ELSE = ' || F.ABC);
  END IF;
END LOOP;

 -- FOR문 TRY-CATCH(BEGIN~END)
DECLARE
  BEGIN
    V_SQL1:= 'SELECT ''XXX'' AS ABC FROM DUAL';
    OPEN CUR2 FOR V_SQL1;
      LOOP
        FETCH CUR2 INTO V_ABC1;
        EXIT WHEN CUR2%NOTFOUND ;
        DBMS_OUTPUT.PUT_LINE('CUR2 = ' || V_ABC1);
      END LOOP;
    CLOSE CUR2;
  EXCEPTION 
    WHEN NO_DATA_FOUND THEN
      DBMS_OUTPUT.PUT_LINE ('NO_DATA_FOUND' || SQLCODE || '-' || SQLERRM) ;        
      --SP_ERR_LOG('SP_POINT_ADD', 'ID=' || P_ID || ', JOB_SEQ=' || P_JOB_SEQ, V_BZNO, SQLCODE, SQLERRM, dbms_utility.format_error_backtrace);
      --dbms_utility.format_call_stack
      --dbms_utility.format_error_stack 
    WHEN DUP_VAL_ON_INDEX THEN  
      DBMS_OUTPUT.PUT_LINE ('DUP_VAL_ON_INDEX' || SQLCODE || '-' || SQLERRM) ;        
    WHEN ZERO_DIVIDE THEN  
      DBMS_OUTPUT.PUT_LINE ('ZERO_DIVIDE' || SQLCODE || '-' || SQLERRM) ;        
    WHEN OTHERS THEN
      DBMS_OUTPUT.PUT_LINE ('OTHERS' || SQLCODE || '-' || SQLERRM) ;        
   END;    
END;    
